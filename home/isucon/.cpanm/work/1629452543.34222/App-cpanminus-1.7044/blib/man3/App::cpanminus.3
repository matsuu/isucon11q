.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "App::cpanminus 3"
.TH App::cpanminus 3 "2018-04-19" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
App::cpanminus \- get, unpack, build and install modules from CPAN
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    cpanm Module
.Ve
.PP
Run \f(CW\*(C`cpanm \-h\*(C'\fR or \f(CW\*(C`perldoc cpanm\*(C'\fR for more options.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
cpanminus is a script to get, unpack, build and install modules from
\&\s-1CPAN\s0 and does nothing else.
.PP
It's dependency free (can bootstrap itself), requires zero
configuration, and stands alone. When running, it requires only 10MB
of \s-1RAM.\s0
.SH "INSTALLATION"
.IX Header "INSTALLATION"
There are several ways to install cpanminus to your system.
.SS "Package management system"
.IX Subsection "Package management system"
There are Debian packages, RPMs, FreeBSD ports, and packages for other
operation systems available. If you want to use the package management system,
search for cpanminus and use the appropriate command to install. This makes it
easy to install \f(CW\*(C`cpanm\*(C'\fR to your system without thinking about where to
install, and later upgrade.
.SS "Installing to system perl"
.IX Subsection "Installing to system perl"
You can also use the latest cpanminus to install cpanminus itself:
.PP
.Vb 1
\&    curl \-L https://cpanmin.us | perl \- \-\-sudo App::cpanminus
.Ve
.PP
This will install \f(CW\*(C`cpanm\*(C'\fR to your bin directory like
\&\f(CW\*(C`/usr/local/bin\*(C'\fR and you'll need the \f(CW\*(C`\-\-sudo\*(C'\fR option to write to
the directory, unless you configured \f(CW\*(C`INSTALL_BASE\*(C'\fR with local::lib.
.SS "Installing to local perl (perlbrew, plenv etc.)"
.IX Subsection "Installing to local perl (perlbrew, plenv etc.)"
If you have perl in your home directory, which is the case if you use
tools like perlbrew or plenv, you don't need the \f(CW\*(C`\-\-sudo\*(C'\fR option, since
you're most likely to have a write permission to the perl's library
path. You can just do:
.PP
.Vb 1
\&    curl \-L https://cpanmin.us | perl \- App::cpanminus
.Ve
.PP
to install the \f(CW\*(C`cpanm\*(C'\fR executable to the perl's bin path, like
\&\f(CW\*(C`~/perl5/perlbrew/bin/cpanm\*(C'\fR.
.SS "Downloading the standalone executable"
.IX Subsection "Downloading the standalone executable"
You can also copy the standalone executable to whatever location you'd like.
.PP
.Vb 3
\&    cd ~/bin
\&    curl \-L https://cpanmin.us/ \-o cpanm
\&    chmod +x cpanm
.Ve
.PP
This just works, but be sure to grab the new version manually when you
upgrade because \f(CW\*(C`\-\-self\-upgrade\*(C'\fR might not work with this installation setup.
.SS "Troubleshoot: \s-1HTTPS\s0 warnings"
.IX Subsection "Troubleshoot: HTTPS warnings"
When you run \f(CW\*(C`curl\*(C'\fR commands above, you may encounter \s-1SSL\s0 handshake
errors or certification warnings. This is due to your \s-1HTTP\s0 client
(curl) being old, or \s-1SSL\s0 certificates installed on your system needs
to be updated.
.PP
You're recommended to update the software or system if you can. If
that is impossible or difficult, use the \f(CW\*(C`\-k\*(C'\fR option with curl or an
alternative \s-1URL,\s0 \f(CW\*(C`https://git.io/cpanm\*(C'\fR
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
perl 5.8.1 or later.
.IP "\(bu" 4
\&'tar' executable (bsdtar or \s-1GNU\s0 tar version 1.22 are recommended) or Archive::Tar to unpack files.
.IP "\(bu" 4
C compiler, if you want to build \s-1XS\s0 modules.
.IP "\(bu" 4
make
.IP "\(bu" 4
Module::Build (core in 5.10)
.SH "QUESTIONS"
.IX Header "QUESTIONS"
.SS "How does cpanm get/parse/update the \s-1CPAN\s0 index?"
.IX Subsection "How does cpanm get/parse/update the CPAN index?"
It queries the \s-1CPAN\s0 Meta \s-1DB\s0 site at <http://cpanmetadb.plackperl.org/>.
The site is updated at least every hour to reflect the latest changes
from fast syncing mirrors. The script then also falls back to query the
module at <http://metacpan.org/> using its search \s-1API.\s0
.PP
Upon calling these \s-1API\s0 hosts, cpanm (1.6004 or later) will send the
local perl versions to the server in User-Agent string by default. You
can turn it off with \f(CW\*(C`\-\-no\-report\-perl\-version\*(C'\fR option. Read more
about the option with cpanm, and read more about the privacy policy
about this data collection at <http://cpanmetadb.plackperl.org/#privacy>
.PP
Fetched files are unpacked in \f(CW\*(C`~/.cpanm\*(C'\fR and automatically cleaned up
periodically.  You can configure the location of this with the
\&\f(CW\*(C`PERL_CPANM_HOME\*(C'\fR environment variable.
.SS "Where does this install modules to? Do I need root access?"
.IX Subsection "Where does this install modules to? Do I need root access?"
It installs to wherever ExtUtils::MakeMaker and Module::Build are
configured to (via \f(CW\*(C`PERL_MM_OPT\*(C'\fR and \f(CW\*(C`PERL_MB_OPT\*(C'\fR).
.PP
By default, it installs to the site_perl directory that belongs to
your perl. You can see the locations for that by running \f(CW\*(C`perl \-V\*(C'\fR
and it will be likely something under \f(CW\*(C`/opt/local/perl/...\*(C'\fR if you're
using system perl, or under your home directory if you have built perl
yourself using perlbrew or plenv.
.PP
If you've already configured local::lib on your shell, cpanm respects
that settings and modules will be installed to your local perl5
directory.
.PP
At a boot time, cpanminus checks whether you have already configured
local::lib, or have a permission to install modules to the site_perl
directory.  If neither, i.e. you're using system perl and do not run
cpanm as a root, it automatically sets up local::lib compatible
installation path in a \f(CW\*(C`perl5\*(C'\fR directory under your home
directory.
.PP
To avoid this, run \f(CW\*(C`cpanm\*(C'\fR either as a root user, with \f(CW\*(C`\-\-sudo\*(C'\fR
option, or with \f(CW\*(C`\-\-local\-lib\*(C'\fR option.
.SS "cpanminus can't install the module \s-1XYZ.\s0 Is it a bug?"
.IX Subsection "cpanminus can't install the module XYZ. Is it a bug?"
It is more likely a problem with the distribution itself. cpanminus
doesn't support or may have issues with distributions such as follows:
.IP "\(bu" 4
Tests that require input from \s-1STDIN.\s0
.IP "\(bu" 4
Build.PL or Makefile.PL that prompts for input even when
\&\f(CW\*(C`PERL_MM_USE_DEFAULT\*(C'\fR is enabled.
.IP "\(bu" 4
Modules that have invalid numeric values as \s-1VERSION\s0 (such as \f(CW\*(C`1.1a\*(C'\fR)
.PP
These failures can be reported back to the author of the module so
that they can fix it accordingly, rather than to cpanminus.
.SS "Does cpanm support the feature \s-1XYZ\s0 of \s-1CPAN\s0 and \s-1CPANPLUS\s0?"
.IX Subsection "Does cpanm support the feature XYZ of CPAN and CPANPLUS?"
Most likely not. Here are the things that cpanm doesn't do by
itself.
.PP
If you need these features, use \s-1CPAN\s0, \s-1CPANPLUS\s0 or the standalone
tools that are mentioned.
.IP "\(bu" 4
\&\s-1CPAN\s0 testers reporting. See App::cpanminus::reporter
.IP "\(bu" 4
Building \s-1RPM\s0 packages from \s-1CPAN\s0 modules
.IP "\(bu" 4
Listing the outdated modules that needs upgrading. See App::cpanoutdated
.IP "\(bu" 4
Showing the changes of the modules you're about to upgrade. See cpan-listchanges
.IP "\(bu" 4
Patching \s-1CPAN\s0 modules with distroprefs.
.PP
See cpanm or \f(CW\*(C`cpanm \-h\*(C'\fR to see what cpanminus \fIcan\fR do :)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010\- Tatsuhiko Miyagawa
.PP
The standalone executable contains the following modules embedded.
.IP "CPAN::DistnameInfo Copyright 2003 Graham Barr" 4
.IX Item "CPAN::DistnameInfo Copyright 2003 Graham Barr"
.PD 0
.IP "local::lib Copyright 2007\-2009 Matt S Trout" 4
.IX Item "local::lib Copyright 2007-2009 Matt S Trout"
.IP "HTTP::Tiny Copyright 2011 Christian Hansen" 4
.IX Item "HTTP::Tiny Copyright 2011 Christian Hansen"
.IP "Module::Metadata Copyright 2001\-2006 Ken Williams. 2010 Matt S Trout" 4
.IX Item "Module::Metadata Copyright 2001-2006 Ken Williams. 2010 Matt S Trout"
.IP "version Copyright 2004\-2010 John Peacock" 4
.IX Item "version Copyright 2004-2010 John Peacock"
.IP "\s-1JSON::PP\s0 Copyright 2007\-2011 by Makamaka Hannyaharamitu" 4
.IX Item "JSON::PP Copyright 2007-2011 by Makamaka Hannyaharamitu"
.IP "CPAN::Meta, CPAN::Meta::Requirements Copyright (c) 2010 by David Golden and Ricardo Signes" 4
.IX Item "CPAN::Meta, CPAN::Meta::Requirements Copyright (c) 2010 by David Golden and Ricardo Signes"
.IP "CPAN::Meta::YAML Copyright 2010 Adam Kennedy" 4
.IX Item "CPAN::Meta::YAML Copyright 2010 Adam Kennedy"
.IP "CPAN::Meta::Check Copyright (c) 2012 by Leon Timmermans" 4
.IX Item "CPAN::Meta::Check Copyright (c) 2012 by Leon Timmermans"
.IP "File::pushd Copyright 2012 David Golden" 4
.IX Item "File::pushd Copyright 2012 David Golden"
.IP "parent Copyright (c) 2007\-10 Max Maischein" 4
.IX Item "parent Copyright (c) 2007-10 Max Maischein"
.IP "Parse::PMFile Copyright 1995 \- 2013 by Andreas Koenig, Copyright 2013 by Kenichi Ishigaki" 4
.IX Item "Parse::PMFile Copyright 1995 - 2013 by Andreas Koenig, Copyright 2013 by Kenichi Ishigaki"
.IP "String::ShellQuote by Roderick Schertler" 4
.IX Item "String::ShellQuote by Roderick Schertler"
.PD
.SH "LICENSE"
.IX Header "LICENSE"
This software is licensed under the same terms as Perl.
.SH "CREDITS"
.IX Header "CREDITS"
.SS "\s-1CONTRIBUTORS\s0"
.IX Subsection "CONTRIBUTORS"
Patches and code improvements were contributed by:
.PP
Goro Fuji, Kazuhiro Osawa, Tokuhiro Matsuno, Kenichi Ishigaki, Ian
Wells, Pedro Melo, Masayoshi Sekimura, Matt S Trout (mst), squeeky,
horus and Ingy dot Net.
.SS "\s-1ACKNOWLEDGEMENTS\s0"
.IX Subsection "ACKNOWLEDGEMENTS"
Bug reports, suggestions and feedbacks were sent by, or general
acknowledgement goes to:
.PP
Jesse Vincent, David Golden, Andreas Koenig, Jos Boumans, Chris
Williams, Adam Kennedy, Audrey Tang, J. Shirley, Chris Prather, Jesse
Luehrs, Marcus Ramberg, Shawn M Moore, chocolateboy, Chirs Nehren,
Jonathan Rockway, Leon Brocard, Simon Elliott, Ricardo Signes, AEvar
Arnfjord Bjarmason, Eric Wilhelm, Florian Ragwitz and xaicron.
.SH "COMMUNITY"
.IX Header "COMMUNITY"
.IP "<http://github.com/miyagawa/cpanminus> \- source code repository, issue tracker" 4
.IX Item "<http://github.com/miyagawa/cpanminus> - source code repository, issue tracker"
.PD 0
.IP "<irc://irc.perl.org/#cpanm> \- discussions about cpanm and its related tools" 4
.IX Item "<irc://irc.perl.org/#cpanm> - discussions about cpanm and its related tools"
.PD
.SH "NO WARRANTY"
.IX Header "NO WARRANTY"
This software is provided \*(L"as-is,\*(R" without any express or implied
warranty. In no event shall the author be held liable for any damages
arising from the use of the software.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1CPAN\s0 \s-1CPANPLUS\s0 pip
