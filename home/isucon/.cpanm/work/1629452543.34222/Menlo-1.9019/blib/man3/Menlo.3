.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Menlo 3"
.TH Menlo 3 "2018-04-25" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Menlo \- A CPAN client
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Menlo is a backend for \fIcpanm 2.0\fR, developed with the goal to
replace cpanm internals with a set of modules that are more
flexible, extensible and easier to use.
.SH "COMPATIBILITY"
.IX Header "COMPATIBILITY"
Menlo is developed within cpanminus git repository at \f(CW\*(C`Menlo\*(C'\fR
subdirectory at <https://github.com/miyagawa/cpanminus>
.PP
Menlo::CLI::Compat started off as a copy of App::cpanminus::script,
but will go under a big refactoring to extract all the bits out of
it. Hopefully the end result will be just a shim and translation layer
to interpret command line options.
.SH "MOTIVATION"
.IX Header "MOTIVATION"
cpanm has been a popular choice of \s-1CPAN\s0 package installer for many
developers, because it is lightweight, fast, and requires no
configuration in most environments.
.PP
Meanwhile, the way cpanm has been implemented (one God class, and all
modules are packaged in one script with fatpacker) makes it difficult
to extend, or modify the behaviors at a runtime, unless you decide to
fork the code or monkeypatch its hidden backend class.
.PP
cpanm also has no scriptable \s-1API\s0 or hook points, which means if you
want to write a tool that works with cpanm, you basically have to work
around its behavior by writing a shell wrapper, or parsing the output
of its standard out or a build log file.
.PP
Menlo will keep the best aspects of cpanm, which is dependencies free,
configuration free, lightweight and fast to install \s-1CPAN\s0 modules. At
the same time, it's impelmented as a standard perl module, available
on \s-1CPAN,\s0 and you can extend its behavior by either using its modular
interfaces, or writing plugins to hook into its behaviors.
.SH "FAQ"
.IX Header "FAQ"
.IP "Dependencies free? I see many prerequisites in Menlo." 4
.IX Item "Dependencies free? I see many prerequisites in Menlo."
Menlo is a set of libraries and uses non-core \s-1CPAN\s0 modules as its
dependencies. App-cpanminus distribution embeds Menlo and all of its
runtime dependencies into a fatpacked binary, so that you can install
App-cpanminus or Menlo without having any \s-1CPAN\s0 client to begin with.
.IP "Is Menlo a new name for cpanm?" 4
.IX Item "Is Menlo a new name for cpanm?"
Right now it's just a library name, but I'm comfortable calling this a
new package name for cpanm 2's backend.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
2010\- Tatsuhiko Miyagawa
.SH "LICENSE"
.IX Header "LICENSE"
This software is licensed under the same terms as Perl.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
cpanm
