.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Carton::Doc::Upgrading 3"
.TH Carton::Doc::Upgrading 3 "2018-06-28" "perl v5.34.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Carton::Doc::Upgrading \- Upgrading document
.SH "UPGRADING"
.IX Header "UPGRADING"
Carton adds, changes and deprecates some features between major
releases in backward incompatible ways. Here's the list of major
changes between versions. See \f(CW\*(C`Changes\*(C'\fR file for more details.
.SS "v0.9 to v1.0"
.IX Subsection "v0.9 to v1.0"
.IP "\(bu" 4
\&\f(CW\*(C`carton exec \-Ilib\*(C'\fR is deprecated. You must pass the optional include
path to perl interpreter in the normal way, like:
.Sp
.Vb 1
\&  carton exec perl \-Ilib myscript
.Ve
.Sp
Or make your script to take its own \f(CW\*(C`\-I\*(C'\fR option, like many command line
launcher does (i.e. plackup, prove)
.Sp
.Vb 1
\&  carton exec plackup \-Ilib myapp.psgi
.Ve
.IP "\(bu" 4
\&\f(CW\*(C`carton.lock\*(C'\fR is now \f(CW\*(C`cpanfile.snapshot\*(C'\fR. Its name and file format
has been changed. There's no automatic migration, but you can do:
.Sp
.Vb 2
\&  # run with Carton v0.9.64
\&  > carton install
\&
\&  # upgrade to Carton v1.0
\&  > cpanm Carton
\&  > carton install
\&  > git add cpanfile.snapshot
\&  > git rm carton.lock
.Ve
.Sp
This process will most likely preserve modules in your local library.
.IP "\(bu" 4
cpanfile is now a requirement, and extracting requirements from build
files (\f(CW\*(C`Makefile.PL\*(C'\fR, \f(CW\*(C`Build.PL\*(C'\fR) is not supported.
