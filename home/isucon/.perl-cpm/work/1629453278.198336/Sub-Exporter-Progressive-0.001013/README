SYNOPSIS

     package Syntax::Keyword::Gather;
    
     use Sub::Exporter::Progressive -setup => {
       exports => [qw( break gather gathered take )],
       groups => {
         default => [qw( break gather gathered take )],
       },
     };
    
     # elsewhere
    
     # uses Exporter for speed
     use Syntax::Keyword::Gather;
    
     # somewhere else
    
     # uses Sub::Exporter for features
     use Syntax::Keyword::Gather 'gather', take => { -as => 'grab' };

DESCRIPTION

    Sub::Exporter is an incredibly powerful module, but with that power
    comes great responsibility, er- as well as some runtime penalties. This
    module is a Sub::Exporter wrapper that will let your users just use
    Exporter if all they are doing is picking exports, but use
    Sub::Exporter if your users try to use Sub::Exporter's more advanced
    features, like renaming exports, if they try to use them.

    Note that this module will export @EXPORT, @EXPORT_OK and %EXPORT_TAGS
    package variables for Exporter to work. Additionally, if your package
    uses advanced Sub::Exporter features like currying, this module will
    only ever use Sub::Exporter, so you might as well use it directly.

CONTRIBUTORS

    ilmari - Dagfinn Ilmari Manns√•ker (cpan:ILMARI) <ilmari@ilmari.org>

    mst - Matt S. Trout (cpan:MSTROUT) <mst@shadowcat.co.uk>

    leont - Leon Timmermans (cpan:LEONT) <leont@cpan.org>

