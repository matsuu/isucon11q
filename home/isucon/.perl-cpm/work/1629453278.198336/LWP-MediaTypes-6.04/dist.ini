name = LWP-MediaTypes
author = Gisle Aas <gisle@activestate.com>
license             = Perl_5
copyright_holder    = Gisle Aas
copyright_year      = 1995

[Git::GatherDir]
exclude_filename = cpanfile
exclude_filename = LICENSE
exclude_filename = META.json
exclude_filename = README.md

[MetaConfig]
[MetaProvides::Package]
[MetaNoIndex]
directory = t
directory = xt
[MetaYAML]
[MetaJSON]
[MetaResources]
x_IRC = irc://irc.perl.org/#lwp
x_MailingList = mailto:libwww@perl.org

[Git::Contributors]
[GithubMeta]
issues = 1
user = libwww-perl
[Authority]
do_munging = 0
authority = cpan:LWWWP
[Manifest]
[License]
[InstallGuide]

; make the bin dir executables
[ExecDir]
; [ShareDir]

[Prereqs]
perl = 5.006002
[AutoPrereqs]
[CPANFile]

[MakeMaker]

; TODO strict and warnings to quiet the kwalitee tests
; [Test::Kwalitee]
; filename = xt/author/kwalitee.t
[MojibakeTests]
[Test::Version]
[Test::ReportPrereqs]

[Test::Compile]
bail_out_on_fail = 1
xt_mode = 1
; avoid failing on 5.8: Warning: Use of "keys" without parentheses is ambiguous at Data/Dump/Trace.pm line 262.
[Substitute / 00-compile.t]
file = xt/author/00-compile.t
code = s{(is\(scalar\(\@warnings\), 0, 'no warnings found'\))}{TODO: \{\nlocal \$TODO = 'Data::Dump::Trace warns on 5.8' if \$\] < '5.009';\n$1};
code = s{(^\s+or diag 'got warnings: ', explain\(\\\@warnings\);)}{$1\n\}};

[Test::Portability]
; TODO perltidy for NoTabs and namespace::autoclean
; [Test::CleanNamespaces] ; TODO
; [Test::NoTabs] ; TODO
[Test::EOL]

; We run release tests in travis. but make the changes-has-content test TODO only for master.
; This will prod pull request submitters to add a Changes entry.
[Test::ChangesHasContent]
[Substitute / changes_has_content.t]
file = xt/release/changes_has_content.t
code = s{^(note 'Checking Changes')}{if \(\(\$ENV\{TRAVIS_PULL_REQUEST\} \|\| '') eq 'false'\) \{\n  chomp\(my \$branch_name = \(\$ENV\{TRAVIS_BRANCH\} || \`git rev-parse --abbrev-ref HEAD\`\)\);\n  \$TODO = 'Changes need not have content for this release yet if this is only the master branch'\n    if \(\$branch_name \|\| ''\) eq 'master';\n\}\n\n$1}

[Test::MinimumVersion]
[PodSyntaxTests]

; Not 100% clear why file_exts() is undocumented. Maybe meant to be private.
[Test::Pod::Coverage::Configurable]
trustme = LWP::MediaTypes => qr/^(?:file_exts)$/

[Test::PodSpelling]
wordlist = Pod::Wordlist
spell_cmd = aspell list
stopword = eg

[Git::Check]
allow_dirty =

[CheckStrictVersion]
decimal_only = 1

[RunExtraTests]
[CheckChangeLog]
[CheckChangesHasContent]
[TestRelease]

[UploadToCPAN]

; Create Readme
[ReadmeAnyFromPod / Markdown_Readme]
source_filename = lib/LWP/MediaTypes.pm
type = markdown
filename = README.md
location = root
phase = release

[CopyFilesFromRelease]
filename = cpanfile
filename = META.json
filename = LICENSE

; The distribution version is read from lib/LWP.pm's $VERSION.
; At release, all versions are bumped.
; To change the version at release time, you can either edit LWP.pm's
; $VERSION, or set the V environment variable, e.g. V=1.23 dzil release
[@Git::VersionManager]
commit_files_after_release = cpanfile
commit_files_after_release = META.json
commit_files_after_release = LICENSE
commit_files_after_release = README.md

[Git::Push]

; listed late, to allow all other plugins which do BeforeRelease checks to run first.
[ConfirmRelease]
